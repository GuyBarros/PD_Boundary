#!/bin/bash

# Define the output path for the config file
CONFIG_FILE="config.hcl"

# Fetch the list of boundary workers in JSON format
WORKERS_JSON=$(boundary workers list -format=json -token env://BOUNDARY_TOKEN -filter='"hcp-managed-worker-" in "/item/name"')
ENROLLMENT_TOKEN=$(boundary workers create controller-led -name podman-worker-$(date +%Y%m%d) -format=json -token env://BOUNDARY_TOKEN | jq -r .item.controller_generated_activation_token)

# Extract the addresses from the JSON output
ADDRESSES=$(echo "$WORKERS_JSON" | jq -r '.items[].address')

# Create the initial_upstream array for the config.hcl
INITIAL_UPSTREAM="initial_upstreams = ["
for ADDRESS in $ADDRESSES; do
    #ADDRESS=$(echo $ADDRESS | sed 's/:9202//')
    ADDRESS=$(echo $ADDRESS)
    INITIAL_UPSTREAM+="\"$ADDRESS\", "
done

# Remove the trailing comma and space, and close the array
INITIAL_UPSTREAM="${INITIAL_UPSTREAM%, } ]"

# Write the config.hcl file
cat <<EOF > $CONFIG_FILE
# Boundary Configuration
# Automatically generated by the script
disable_mlock = true

listener "tcp" {
  address = "0.0.0.0:9202"
  purpose = "proxy"
}

worker {
  $INITIAL_UPSTREAM
  auth_storage_path = "/boundary/file/podmanlab"
  recording_storage_path = "/boundary/recording/"
    controller_generated_activation_token = "$ENROLLMENT_TOKEN"
  tags {
    type = ["podmanlab"]
  }
}


EOF

# Output success message
echo "Config file created at: $CONFIG_FILE"
